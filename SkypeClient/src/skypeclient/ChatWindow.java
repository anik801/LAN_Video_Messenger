package skypeclient;

import java.io.BufferedReader;
import java.io.PrintStream;
import java.net.InetAddress;
import video.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author John
 */
public class ChatWindow extends javax.swing.JFrame {

    /**
     * Creates new form ChatWindow
     */
    
    BufferedReader serverReader;
    PrintStream serverWriter;
    String username, receiverName;
    int udpPortOut,udpPortIn;
    int videoPortOut,videoPortIn;
    InetAddress ownIP, callerIP;
    
    public ChatWindow(BufferedReader serverReader, PrintStream serverWriter, String username, String receiverName,int udpPortOut,int udpPortIn, InetAddress ownIP, InetAddress callerIP, int videoPortOut, int videoPortIn) {
        initComponents();
        
        this.serverReader = serverReader;
        this.serverWriter = serverWriter;
        this.username = username;
        this.receiverName = receiverName;
        this.udpPortOut = udpPortOut;
        this.udpPortIn = udpPortIn;
        this.ownIP = ownIP;
        this.callerIP = callerIP;
        this.videoPortOut = videoPortOut;
        this.videoPortIn = videoPortIn;
        
        chatActivity();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        outputTextArea = new javax.swing.JTextArea();
        inputTextField = new javax.swing.JTextField();
        sendMessageBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        outputTextArea.setEditable(false);
        outputTextArea.setColumns(20);
        outputTextArea.setLineWrap(true);
        outputTextArea.setRows(5);
        jScrollPane1.setViewportView(outputTextArea);

        sendMessageBtn.setText("Send Message");
        sendMessageBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMessageBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(224, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1)
                        .addComponent(inputTextField))
                    .addComponent(sendMessageBtn, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(inputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sendMessageBtn)
                .addContainerGap(75, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendMessageBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendMessageBtnActionPerformed
        // TODO add your handling code here:
        String message = inputTextField.getText();
        if(!message.equals("")){
            serverWriter.println("sendMessage");        
            serverWriter.println(message);
            
            outputTextArea.append("Me: "+message+"\n");
            outputTextArea.setCaretPosition(outputTextArea.getDocument().getLength());

            inputTextField.setText("");
        }
        
    }//GEN-LAST:event_sendMessageBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new ChatWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField inputTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea outputTextArea;
    private javax.swing.JButton sendMessageBtn;
    // End of variables declaration//GEN-END:variables

    public void chatActivity(){
        outputTextArea.setText("User: "+username+"\nRecipient: "+receiverName+"\n");
        outputTextArea.setCaretPosition(outputTextArea.getDocument().getLength());
        
        System.out.println("UDP incoming port: "+udpPortIn);
        System.out.println("UDP outgoing port: "+udpPortOut);
        
        System.out.println("Video incoming port: "+videoPortIn);
        System.out.println("Video outgoing port: "+videoPortOut);
        
        
        new MicRecorder(callerIP, udpPortOut);
        new MicPlayer(udpPortIn);
        
        //new VideoRecorder(callerIP, videoPortOut);
        //new VideoPlayer(videoPortIn);
        new VideoIO(callerIP, videoPortOut, videoPortIn);
        
        new ChatThread(serverReader, serverWriter,outputTextArea,receiverName);
        
        
    }
}
